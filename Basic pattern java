 public static void hollow_Rectangle(int tot_row, int tot_col) {
        // outer line of loop
        for (int i = 1; i <= tot_row; i++) {
            // inner line
            for (int j = 1; j <= tot_col; j++) {
                if (i == 1 || i == tot_row || j == 1 || j==tot_col) {
                    System.out.print(" *");
                } else {
                    System.out.print("  ");
                }
            }
            System.out.println();
        }
    }
    public static void inverted_halfPyramid(int n){
            for(int i=1;i<=n;i++){
                for(int j=1;j<=n-i;j++){
                    System.out.print(" ");
                }
               for(int r=1;r>=1;r--){   
                    System.out.print(" *");
                 }               
              
                System.out.println();
            }
    }

    public static void inverted_halfPyyramid_with_number(int n){
           for(int i=1;i<=n;i++){
            for(int j=1;j<=n-i+1;j++){
                System.out.print(j+" ");
            }
            System.out.println();
           }
    }

    public static void floyd_triangle(int n){
        int temp=1;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=i;j++){
                System.out.print(temp+" ");
                temp++;
            }
            System.out.println();
           }
    }

    public static void triangle_0_1(int n){
        for(int i=0;i<n;i++){
            for(int j=0;j<=i;j++){
                if((i+j) %2==0){
                    System.out.print(" 1");
                }
                else{
                    System.out.print(" 0");
                }
            }
            System.out.println();
        }
    }

    public static void inverted_halfPyramid2(int n){
        for(int i=1;i<=n;i++){
            for(int j=1;j<=n-i;j++){
                System.out.print(" ");
            }
           for(int k=1;k<=i;k++){   
                System.out.print(" "+ i +"");
             }               
          
            System.out.println();
        }
   }

   public static void nummber_pyramid(int n){
    for(int i=1;i<=n;i++){
        for(int j=1;j<=n-i;j++){
            System.out.print(" ");
        }
       for(int k=1;k<=i;k++){   
            System.out.print(i +" ");
         }               
      
        System.out.println();
    }
}

         public static void  palindrome_pattern(int n){
        for(int i=1;i<=n;i++){
          
            for(int j=1;j<=n-i;j++){
                System.out.print(" ");
            }
          
            for(int j=i;j>=i;j--){   
                System.out.print(j);
             }     
             for(int j=2;j<=i;j++){   
                System.out.print(j);
             }          
          
            System.out.println();
        }
   }

         public static void butterfly(int n){
            
            for(int i=1;i<=n;i++){
                 for(int j=1;j<=i;j++){
                    System.out.print(" *");
                 }
                 for(int j=1;j<=2*(n-i);j++){
                    System.out.print("  ");
                 }
                 for( int j=1;j<=i;j++){
                    System.out.print(" *");
                 }
                 System.out.println();
            }

            for(int i=n;i>=1;i--){
                for(int j=1;j<=i;j++){
                    System.out.print(" *");
                 }
                 for(int j=1;j<=2*(n-i);j++){
                    System.out.print("  ");
                 }
                 for( int j=1;j<=i;j++){
                    System.out.print(" *");
                 }
                 System.out.println();
            }
         }

         public static void solid_rhombus(int n){
            for(int i=1;i<=n;i++){
                for(int j=1;j<=n-i;j++){
                    System.out.print(" ");
                }
                for(int j=1;j<=n;j++){
                    System.out.print(" *");
                }
                System.out.println();
            }
        }
        public static void hollow_rhombus( int n){
            for(int i=1;i<=n;i++){
                for(int j=1;j<=n-i;j++){
                   System.out.print(" ");
                }
                for(int j=1;j<=n;j++){
                    if(j==1 || j==n || i==1 ||i==n ){
                        System.out.print("*");
                    }else{
                        System.out.print(" ");
                    }
                      
                 }
                 System.out.println();
            }
          
        }
        
        public static void diamond(int n){
            for(int i=1;i<=n;i++){
                for(int j=1;j<=n-i;j++){
                    System.out.print(" ");
                }
                for(int j=1;j<=(2*i)-1;j++){
                    System.out.print("*");
                }
                System.out.println();
            }
            
            for(int i=n;i>=1;i--){
                for(int j=1;j<=n-i;j++){
                    System.out.print(" ");
                }
                for(int j=1;j<=(2*i)-1;j++){
                    System.out.print("*");
                }
                System.out.println();
            }
        }
